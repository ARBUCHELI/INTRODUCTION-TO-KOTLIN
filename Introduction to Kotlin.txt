# INTRODUCTION TO KOTLIN
------------------------
* What is Kotlin?
-----------------
Welcome to the world of coding with Kotlin!

Kotlin is a programming language that, after its release in 2016 by JetBrains, quickly gained popularity amongst developers due to its concise syntax, additional safety features, and 
compatibility with the Java programming language.

Being a general-purpose programming language, Kotlin can be used for Android development, web development, data science, and more. In 2019, Google announced Kotlin as their preferred 
language for Android development.

The following applications use Kotlin in their tech stack:

	. Netflix
	. Duolingo
	. Pinterest
	. And more!

Throughout this lesson, we’ll learn about Kotlin syntax and how to run a basic program.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

* First Kotlin Program
----------------------
What better way to start learning about Kotlin than to run a Kotlin program? Before we run our first program, let’s take a moment to understand our current environment.

Code is written and edited in something called a code editor. The code editor for a Codecademy exercise lives in the middle of the screen. If we look at the top of the editor, we will see 
the file name Hello.kt. The .kt extension signifies that the file contains Kotlin code.

In our code editor, there is a short Kotlin program:

fun main() {
  println("Hello, World!")
}

Don’t worry about understanding what this code means yet. All this program does is print the text "Hello, World!" to the output terminal, which exists on the right side of our screen. 
When we click Run, the output terminal displays our code’s final output.

We’ll be checking the output terminal a lot to ensure our code works as expected.

* Instructions
--------------
Checkpoint 1 Passed
1.
Hit Run to execute our first Kotlin program.


Hint
After hitting Run, the following result should appear in the output terminal:

Hello, World!

Hello.kt
--------
fun main() {
  println("Hello, World!")
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------

The main() Function
-------------------
Think of writing code like going on an adventure: we always need to start somewhere.

In Kotlin, the journey begins in the main() function.

The main() function is the “jumping off” point for our code and is the first part of our program that will execute when we run our program. It will exist in every single Kotlin project we 
create; in fact, without a main() function present, the program will return an error.

The syntax for the main() function looks like this:

fun main() {
  // Code will go here
}

	. fun is a Kotlin keyword that is used to declare a function.

	. main is the required name of the starting function.

	. Following the function name is a pair of empty parentheses ().

Code that is written inside the curly brackets ({ }) is considered the “body” of a function. When we hit Enter to create a new line of code inside the body, the code will automatically 
indent itself:

fun main() {
  println("Hello, World!")
}

* Instructions
--------------
Checkpoint 1 Passed
1.
In Main.kt, create the main() function.

Leave the body empty for now.


Hint
The syntax to create the main() function looks like this:

fun main() {

}

When creating the main() function, be sure to include:

	. The fun keyword

	. The name of the function: main
	
	. A pair of empty parentheses

	. Brackets: { and }

Checkpoint 2 Passed
2.
Add the following code to the body of the main() function:

println("Coding is fun!")


Hint
Add the code to the body of the main function:

fun main() {
  println("Coding is fun!")
}

Main.kt
-------
// Add your code below
fun main() {
  println("Coding is fun!")
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Print Statements
------------------
In the last exercise, we were able to display the text Coding is fun! in the output terminal with the following code:

fun main() {
  println("Coding is fun!")
}

We accomplished this feat using a print statement. A print statement outputs values to the terminal.

When we want to use a print statement in Kotlin, we use the println() function, which prints a value before creating a new line in the output terminal:

println("To infinity and beyond!")

Any value we want to print needs to be placed within the parentheses of the println() statement. If we want to output text, we need to contain the text in double quotes (""). The code in 
the snippet above will output:

To infinity and beyond!

We can even use print statements to output number values and the result of expressions. For example:

println(5 + 5)

Will have an output of:

10

We’ll mainly use println() throughout this course; however, there is another option for printing values to the output terminal: print().

The difference between println() and print() is that println() creates a new line after outputing a value, while print() doesn’t. For example:

println("One")
print("Two")
print("Three")

Will output:

One
TwoThree

* Instructions
--------------
Checkpoint 1 Passed
1.
In Print.kt, use println() to output "Just keep swimming!"


Hint
When using println() to output text, wrap the text in double-quotes(""):

println("I am a text-based output!")

This will output

I am a text-based output!

Checkpoint 2 Passed
2.
In Print.kt, use print() to output the expression 15 * 4.


Hint
Place the value or expression inside the parentheses of the print statement:

print(9 + 1)

This will output:

10

Print.tk
--------
fun main() {
  // Write your code below!
  println("Just keep swimming!")
  print(15 * 4)
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------























































